apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service-deployment
  labels:
    app: cart-service
spec:
  replicas: 1 # Run a single instance, as it's a stateful service.
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service # The label the Service will use to find this pod.
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      # --- FIX: ADD INIT CONTAINER TO SET PERMISSIONS ---
      # This container runs before the main app container to fix volume permissions.
      initContainers:
        - name: init-permissions
          image: busybox:1.32
          # --- FIX: RUN INIT CONTAINER AS ROOT ---
          # This container needs root privileges to run 'chown'.
          # The pod-level securityContext will still apply to the main container.
          securityContext:
            runAsUser: 0
          command: ['sh', '-c', 'chown -R 1000:1000 /app/data']
          volumeMounts:
            - name: cart-storage
              mountPath: /app/data
      containers:
        - name: cart-service
          image: willchrist/cart-service:41f6aed # The Docker image to run.
          ports:
            - containerPort: 8080 # The port the application listens on inside the container.
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:sqlite:/app/data/cart.db"
          volumeMounts:
            - name: cart-storage # The name of the volume to mount.
              mountPath: /app/data # Mount the storage inside the app's working directory.
      volumes:
        - name: cart-storage
          persistentVolumeClaim:
            claimName: cart-db-pvc # Use the PersistentVolumeClaim created above.
---
spec:
  template:
    spec:
      containers:
        - image: willchrist/cart-service:41f6aed
